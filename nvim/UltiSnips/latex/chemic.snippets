# ======================
# Chemical snippets 
# ======================
global !p
texMathZones = ['texMathRegion' + x for x in ['', 'X', 'XX', 'Env', 'EnvStarred', 'Ensured']]
texIgnoreMathZones = ['texMathTextArg']
texMathZoneIds = vim.eval('map(' + str(texMathZones) + ", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

# -----------------------
# Chemical status
# -----------------------
snippet ce "Create chemic reaction" w
\ce{$1}$2
endsnippet

snippet up "\uparrow" i
\uparrow$0
endsnippet

snippet _aq "(aq)" i
_{(aq)}$0
endsnippet

snippet _s "(s)" i
_{(s)}$0
endsnippet

snippet _g "(g)" i
_{(g)}$0
endsnippet

snippet _l "(l)" i
_{(l)}$0
endsnippet

# ----------
# Units 
# ----------
snippet uM "\frac{g}{mol}" w
\frac{g}{mol} $0
endsnippet

# -------------------------
# Electron connections 
# -------------------------
context "math()"
snippet - "-[<number>]<atom>" w
-[${1: Number}]${2:Atom}$0
endsnippet

context "math()"
snippet = "=[<number>]<atom>" i
=[${1: Number}]${2:Atom}$0
endsnippet

context "math()"
snippet ~ "~[<number>]<atom>" i
~[${1: Number}]${2:Atom}$0
endsnippet

# ========================
# Chemical structures 
# ========================
# ------------------------------------------------
# The environment to draw chemical structures 
# ------------------------------------------------
snippet chsch "\schemestart" bw
\schemestart
	$0
\schemestop
endsnippet

snippet h3o "H3O^{+}_{(aq)}" i
H3O^{+}_{(aq)}
endsnippet

snippet oh "OH^{-}_{(aq)}" i
OH^{-}_{(aq)}
endsnippet

snippet chsubsch "\subscheme" w
\subscheme{$0}
endsnippet

snippet ch[ "\chemleft[\chemright]" w
\chemleft[
	$0
\chemright
endsnippet

snippet chm "\chemmove}" bw
\chemmove {
	$0
}
endsnippet

snippet chd "\draw for chemmove" bw
\draw[shorten <= ${1:Tail}pt, shorten >= ${2:Head}pt] (${3:start}) .. controls +(90:5mm) and +(90:5mm) .. (${4:end});$0
endsnippet

snippet charr "\arrow{<->}" w
\arrow{${1:<->}}$0
endsnippet

snippet chf "Create chemfig environment" w
\chemfig{
	$1
}$0
endsnippet

snippet chn "\chemname{}{}" w
\chemname{
	$1
}
{$2}
endsnippet

snippet charge "\charge{<args>}{<atom>}" i
\charge{${1:Args}}{${2:Atom}}$0
endsnippet

snippet polymerdelim "polymerdelim setter" b
\polymerdelim[delimiters={[]}, height=45pt, depth=120pt, indice=n]{${1:l}}{${2:r}} $0
endsnippet

# --------------------------------
# chemical structure snippets 
# --------------------------------
snippet benzol "**6(------)" i
**6(
	-
	-
	-
	-
	-
	-
)$0
endsnippet

snippet "-(\d+)(\S+)" "Automatic atom setter" r
`!p

"""
Here are al chemical formulas stored.
The key is the name of the element.
The first value of the list decides how many substituents are gonna be added
automatically!
"""
# get the angle to adjust the electron pairs
angle = int(match.group(1))

formula = {
	"ch2" :  [
			3,
			f"-[{angle}]C",
			f"\t( -[{angle + 2}]H)",
			f"\t( -[{angle - 2}]H)"
	],
	"cooh" : [
		5,
		f"-[{angle}]C",
		f"\t(=[{angle + 1}]\charge{{{90 + 45 * angle}=\|, {0 + 45 * angle}=\|}}{{O}})",
		f"\t(-[{angle - 1}]\charge{{{60 + 45 * angle}=\|, {-120 + 45 * angle}=\|}}{{O}}",
		f"\t\t ( -[{angle}]H)",
		f"\t)"
	],
	"coor" : [
		4,
		f"-[{angle}]C",
		f"\t(=[{angle + 1}]\charge{{{90 + 45 * angle}=\|, {0 + 45 * angle}=\|}}{{O}})",
		f"\t-[{angle - 1}]\charge{{{45 + 45 * angle}=\|, {-135 + 45 * angle}=\|}}{{O}}",
		f"\t\-[{angle}]r"
	],
	"ch3" : [
		4,
		f"-[{angle}]C",
		f"\t(-[{angle + 2}]H)",
		f"\t(-[{angle}]H)",
		f"\t(-[{angle - 2}]H)"
	],
	"o2" : [
		1,
		f"=[{angle}]\charge{{{45 + 45 * angle}=\|, {-45 + 45 * angle}=\|}}{{O}}"
	],
	"o3" : [
		1,
		f"-[{angle}]\charge{{{90 + 45 * angle}=\|, {0 + 45 * angle}=\|, {-90 + 45 * angle}=\|, {45 + 45 * angle}:5pt=$\\ominus$}}{{O}}"
	],
	"o" : [
		1,
		f"-[{angle}]\charge{{{90 + 45 * angle}=\|, {-90 + 45 * angle}=\|}}{{O}}"
	],
	"..." : [
		1,
		f"-[{angle}]\Charge{{0=$\ldots$}}{{\\vphantom{{C}}}}"
	],
	"h" : [
		1,
		f"-[{angle}]H"
	]
}

# get the substituent-group
return_string = formula.get(match.group(2), "rofl")

# Test if it was a known molecule
if return_string != "rofl":
	"""
	This will fuse the substituents into one output :)
	"""
	amount = return_string[0]

	snip.rv = return_string[1]

	# Add them into a compatible string!
	for index in range(2, amount + 1):
		snip += return_string[index]

else:
	snip.rv = "nope"
`
endsnippet
